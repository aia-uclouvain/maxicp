<instance format="XCSP3" type="COP">
  <variables>
    <array id="x" note="x[i][j] is 1 iff the cell at row i and col j is alive" size="[5][5]"> 0 1 </array>
    <array id="a" note="a[i][j] is the number of alive neighbours" size="[5][5]"> 0..8 </array>
  </variables>
  <constraints>
    <group note="computing the numbers of alive neighbours">
      <sum>
        <list> %... </list>
        <condition> (eq,%0) </condition>
      </sum>
      <args> a[0][0] x[0][1] x[1][0..1] </args>
      <args> a[0][1] x[0][0] x[0][2] x[1][0..2] </args>
      <args> a[0][2] x[0][1] x[0][3] x[1][1..3] </args>
      <args> a[0][3] x[0][2] x[0][4] x[1][2..4] </args>
      <args> a[0][4] x[0..1][3] x[1][4] </args>
      <args> a[1][0] x[0][0..1] x[1][1] x[2][0..1] </args>
      <args> a[1][1] x[0][0..2] x[1][0] x[1][2] x[2][0..2] </args>
      <args> a[1][2] x[0][1..3] x[1][1] x[1][3] x[2][1..3] </args>
      <args> a[1][3] x[0][2..4] x[1][2] x[1][4] x[2][2..4] </args>
      <args> a[1][4] x[0][3..4] x[1..2][3] x[2][4] </args>
      <args> a[2][0] x[1][0..1] x[2][1] x[3][0..1] </args>
      <args> a[2][1] x[1][0..2] x[2][0] x[2][2] x[3][0..2] </args>
      <args> a[2][2] x[1][1..3] x[2][1] x[2][3] x[3][1..3] </args>
      <args> a[2][3] x[1][2..4] x[2][2] x[2][4] x[3][2..4] </args>
      <args> a[2][4] x[1][3..4] x[2..3][3] x[3][4] </args>
      <args> a[3][0] x[2][0..1] x[3][1] x[4][0..1] </args>
      <args> a[3][1] x[2][0..2] x[3][0] x[3][2] x[4][0..2] </args>
      <args> a[3][2] x[2][1..3] x[3][1] x[3][3] x[4][1..3] </args>
      <args> a[3][3] x[2][2..4] x[3][2] x[3][4] x[4][2..4] </args>
      <args> a[3][4] x[2][3..4] x[3..4][3] x[4][4] </args>
      <args> a[4][0] x[3][0..1] x[4][1] </args>
      <args> a[4][1] x[3][0..2] x[4][0] x[4][2] </args>
      <args> a[4][2] x[3][1..3] x[4][1] x[4][3] </args>
      <args> a[4][3] x[3][2..4] x[4][2] x[4][4] </args>
      <args> a[4][4] x[3][3..4] x[4][3] </args>
    </group>
    <group note="imposing rules of the game">
      <extension>
        <list> %0 %1 </list>
        <supports> (0,0)(1,0)(2,0)(2,1)(3,1)(4,0)(5,0)(6,0)(7,0)(8,0) </supports>
      </extension>
      <args> a[0][0] x[0][0] </args>
      <args> a[0][1] x[0][1] </args>
      <args> a[0][2] x[0][2] </args>
      <args> a[0][3] x[0][3] </args>
      <args> a[0][4] x[0][4] </args>
      <args> a[1][0] x[1][0] </args>
      <args> a[1][1] x[1][1] </args>
      <args> a[1][2] x[1][2] </args>
      <args> a[1][3] x[1][3] </args>
      <args> a[1][4] x[1][4] </args>
      <args> a[2][0] x[2][0] </args>
      <args> a[2][1] x[2][1] </args>
      <args> a[2][2] x[2][2] </args>
      <args> a[2][3] x[2][3] </args>
      <args> a[2][4] x[2][4] </args>
      <args> a[3][0] x[3][0] </args>
      <args> a[3][1] x[3][1] </args>
      <args> a[3][2] x[3][2] </args>
      <args> a[3][3] x[3][3] </args>
      <args> a[3][4] x[3][4] </args>
      <args> a[4][0] x[4][0] </args>
      <args> a[4][1] x[4][1] </args>
      <args> a[4][2] x[4][2] </args>
      <args> a[4][3] x[4][3] </args>
      <args> a[4][4] x[4][4] </args>
    </group>
    <group note="imposing rules for ensuring valid dead cells around the board">
      <extension>
        <list> %0 %1 %2 </list>
        <conflicts> (1,1,1) </conflicts>
      </extension>
      <args> x[0][0..2] </args>
      <args> x[0][1..3] </args>
      <args> x[0][2..4] </args>
      <args> x[4][0..2] </args>
      <args> x[4][1..3] </args>
      <args> x[4][2..4] </args>
      <args> x[0..2][0] </args>
      <args> x[1..3][0] </args>
      <args> x[2..4][0] </args>
      <args> x[0..2][4] </args>
      <args> x[1..3][4] </args>
      <args> x[2..4][4] </args>
    </group>
    <group class="symmetry-breaking">
      <intension> ge(%0,%1) </intension>
      <args> x[0][0] x[4][4] </args>
      <args> x[0][4] x[4][0] </args>
    </group>
  </constraints>
  <objectives>
    <maximize note="maximizing the number of alive cells" type="sum"> x[][] </maximize>
  </objectives>
</instance>
